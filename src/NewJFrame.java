
import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.GregorianCalendar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 2ndyrGroupB
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    static int seconds = 0;
    static int secondsCountDown = 100;
    static int secondsCountUp = 0;
    static int millisecond = 0;
    static int minute = 0;
    static int hour = 0;
    static boolean state = false;
    static boolean stateCountDown = false;
    static boolean stateCountUp = false;

    public NewJFrame() {
        initComponents();
    }
    static int c = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        second = new javax.swing.JPanel();
        sec = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        millisec1 = new javax.swing.JLabel();
        minutes = new javax.swing.JLabel();
        hours = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        CurrentTIme = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        startCountDown = new javax.swing.JButton();
        stopCountDown = new javax.swing.JButton();
        secondscd = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        secondsup = new javax.swing.JTextField();
        stopCountUp = new javax.swing.JButton();
        startCountUp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        second.setBackground(new java.awt.Color(255, 153, 153));

        sec.setText("0 :");

        start.setText("start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setText("stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        millisec1.setText("0");

        minutes.setText("0 :");

        hours.setText("0 :");

        javax.swing.GroupLayout secondLayout = new javax.swing.GroupLayout(second);
        second.setLayout(secondLayout);
        secondLayout.setHorizontalGroup(
            secondLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secondLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(start)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(stop)
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secondLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(hours, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sec, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(millisec1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        secondLayout.setVerticalGroup(
            secondLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(secondLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sec)
                    .addComponent(minutes)
                    .addComponent(millisec1)
                    .addComponent(hours))
                .addGap(52, 52, 52)
                .addGroup(secondLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(stop))
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        CurrentTIme.setText("CURRENT TIME");

        time.setText("time");
        time.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                timePropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CurrentTIme)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CurrentTIme, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(time)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(51, 255, 255));

        jLabel2.setText("COUNT DOWN");

        startCountDown.setText("START");
        startCountDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startCountDownMouseClicked(evt);
            }
        });
        startCountDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCountDownActionPerformed(evt);
            }
        });

        stopCountDown.setText("STOP");
        stopCountDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopCountDownMouseClicked(evt);
            }
        });
        stopCountDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopCountDownActionPerformed(evt);
            }
        });

        secondscd.setText("00");
        secondscd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondscdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startCountDown)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(stopCountDown)
                .addGap(54, 54, 54))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondscd, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(54, 54, 54)
                .addComponent(secondscd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startCountDown)
                    .addComponent(stopCountDown))
                .addGap(74, 74, 74))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        jLabel3.setText("COUNT UP");

        secondsup.setText("00");

        stopCountUp.setText("STOP");
        stopCountUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopCountUpActionPerformed(evt);
            }
        });

        startCountUp.setText("START");
        startCountUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCountUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(secondsup, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(startCountUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(stopCountUp)
                .addGap(47, 47, 47))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(60, 60, 60)
                .addComponent(secondsup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopCountUp)
                    .addComponent(startCountUp))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(second, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here
        state = true;
        Thread t = new Thread() {
            public void run() {
                for (;;) {
                    if (state == true) {
                        try {
                            sleep(1);
                            millisecond++;
                            if (millisecond > 1000) {
                                millisecond = 0;
                                seconds++;
                            }
                            if (seconds > 60) {
                                millisecond = 0;
                                seconds = 0;
                                minute++;

                            }
                            if (minute > 60) {
                                millisecond = 0;
                                seconds = 0;
                                minute = 0;
                                hour++;

                            }
                            millisec1.setText(millisecond + "");
                            sec.setText(seconds + " :");
                            minutes.setText(minute + " :");
                            hours.setText(hour + " :");
                            System.out.println(millisecond);
                        } catch (Exception e) {

                        }
                    } else {
                        break;
                    }
                }
            }
        };
        t.start();
    }//GEN-LAST:event_startActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        state = false;
    }//GEN-LAST:event_stopActionPerformed

    private void stopCountDownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopCountDownMouseClicked
        stateCountDown = false;
    }//GEN-LAST:event_stopCountDownMouseClicked

    private void secondscdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondscdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondscdActionPerformed

    private void startCountDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCountDownActionPerformed
        // TODO add your handling code here:
        stateCountDown = true;
        Thread Down = new Thread() {
            public void run() {
                for (;;) {
                    if (stateCountDown == true) {
                        try {
                            sleep(100);
                            secondsCountDown--;
                            if (secondsCountDown == 0) {
                                secondsCountDown = 100;
                                stateCountDown = false;

                            }

                            secondscd.setText(secondsCountDown + "");

                        } catch (Exception e) {

                        }

                    } else {
                        break;
                    }

                }
            }
        };
        Down.start();
    }//GEN-LAST:event_startCountDownActionPerformed

    private void startCountDownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startCountDownMouseClicked

    }//GEN-LAST:event_startCountDownMouseClicked

    private void stopCountDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopCountDownActionPerformed
        stateCountDown = false;
    }//GEN-LAST:event_stopCountDownActionPerformed

    private void startCountUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCountUpActionPerformed
        stateCountUp = true;
        Thread Up = new Thread() {
            public void run() {
                for (;;) {
                    if (stateCountUp == true) {
                        try {
                            sleep(100);
                            secondsCountUp++;
                            if (secondsCountUp == 100) {
                                secondsCountUp = 0;
                                stateCountUp = false;

                            }

                            secondsup.setText(secondsCountUp + "");

                        } catch (Exception e) {

                        }

                    } else {
                        break;
                    }

                }
            }
        };
        Up.start();


    }//GEN-LAST:event_startCountUpActionPerformed

    private void stopCountUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopCountUpActionPerformed
        stateCountUp = false;

    }//GEN-LAST:event_stopCountUpActionPerformed

    private void timePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_timePropertyChange

        Thread th = new Thread() {
            public void run() {
                try {
                    for (;;) {
                        Calendar c = new GregorianCalendar();
                        int day = c.get(Calendar.DAY_OF_MONTH);
                        int month = c.get(Calendar.MONTH);
                        int year = c.get(Calendar.YEAR);

                        int second = c.get(Calendar.SECOND);
                        int min = c.get(Calendar.MINUTE);
                        int hour = c.get(Calendar.HOUR);
                        int am_pm = c.get(Calendar.AM_PM);

                        String d_n = "";
                        if (am_pm == 1) {
                            d_n = "PM";
                        } else {
                            d_n = "AM";
                        }
                        time.setText(" " + hour + ":" + min + ":" + second + " " + d_n);
                        sleep(1000);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        };
                
      
        th.start();    }//GEN-LAST:event_timePropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
//                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
////                LocalDateTime now = LocalDateTime.now();
////                currentHours.setText(dtf.format(now));
//                
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CurrentTIme;
    private javax.swing.JLabel hours;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel millisec1;
    private javax.swing.JLabel minutes;
    private javax.swing.JLabel sec;
    private javax.swing.JPanel second;
    private javax.swing.JTextField secondscd;
    private javax.swing.JTextField secondsup;
    private javax.swing.JButton start;
    private javax.swing.JButton startCountDown;
    private javax.swing.JButton startCountUp;
    private javax.swing.JButton stop;
    private javax.swing.JButton stopCountDown;
    private javax.swing.JButton stopCountUp;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables

}
